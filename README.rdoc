definicoes de controlers
***************************************
Aplicacao servidor
stores -> para dizer quais lojas
products -> produtos cadastrados no sistema
prices -> preco do produto em diferentes lojas

Aplicacao cliente
lists -> simular aplicacao de cliente



commands
***************************************
rake routes

rails server

# create controller
rails generate controller articles

# create model
rails generate model Article title:string text:text

# migrate
rake db:migrate
rake db:migrate RAILS_ENV=production

rake db:create - creates the database for the current env
rake db:create:all - creates the databases for all envs
rake db:drop - drops the database for the current env
rake db:drop:all - drops the databases for all envs
rake db:migrate -  runs migrations for the current env that have not run yet
rake db:migrate:up -  runs one specific migration
rake db:migrate:down - rolls back one specific migration
rake db:migrate:status - shows current migration status
rake db:rollback - rolls back the last migration
rake db:forward - advances the current schema version to the next one
rake db:seed - (only) runs the db/seed.rb file
rake db:schema:load - loads the schema into the current env's database
rake db:schema:dump - dumps the current env's schema (and seems to create the db as well)
rake db:setup - runs db:schema:load, db:seed
rake db:reset - runs db:drop db:setup
rake db:migrate:redo - runs (db:migrate:down db:migrate:up) or (db:rollback db:migrate) depending on the specified migration
rake db:migrate:reset - runs db:drop db:create db:migrate


#comments
rails generate model Comment commenter:string body:text article:references
rails generate controller Comments

rails generate scaffold Todo title:string notes:text

#add and remove from migrations
rails generate migration AddDetailsToProducts part_number:string price:decimal
rails generate migration RemovePartNumberFromProducts part_number:string
rails generate migration CreateProducts name:string part_number:string
rails generate migration AddDetailsToProducts 'price:decimal{5,2}' supplier:references{polymorphic}


utilidades
***************************************
    3.5 Column Modifiers
    Column modifiers can be applied when creating or changing a column:
        -limit Sets the maximum size of the string/text/binary/integer fields.
        -precision Defines the precision for the decimal fields, representing the total number of digits in the number.
        -scale Defines the scale for the decimal fields, representing the number of digits after the decimal point.
        -polymorphic Adds a type column for belongs_to associations.
        -null Allows or disallows NULL values in the column.
        -default Allows to set a default value on the column. Note that if you are using a dynamic value (such as a date), the default will only be calculated the first time (i.e. on the date the migration is applied).
        -index Adds an index for the column.
        -required Adds required: true for belongs_to associations and null: false to the column in the migration.

    3.8 Using the change Method
    The change method is the primary way of writing migrations. It works for the majority of cases, where Active Record knows how to reverse the migration automatically. Currently, the change method supports only these migration definitions:
        add_column
        add_index
        add_reference
        add_timestamps
e (must supply a block)
        drop_join_table (must supply a block)        add_foreign_key
                                                     create_table
                                                     create_join_table
                                                     drop_tabl
        remove_timestamps
        rename_column
        rename_index
        remove_reference
        rename_table


        bootstrap
        http://www.gotealeaf.com/blog/integrating-rails-and-bootstrap-part-1/

        <%= fa_icon "camera-retro" %>

        class="<%= 'active' if params[:controller] == 'controller1' %>"


        autocomplete
        http://codepen.io/asommer70/post/autocomplete-with-rails4-autocomplete

        autocomplete :product, :name,
                       :extra_data => [:id, :alias],
                       :scopes => [:wa2[1]],
                       :display_value => :full_name,
                       :full => true